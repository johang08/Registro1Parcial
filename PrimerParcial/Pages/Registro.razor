
@using PrimerParcial.Models
@using PrimerParcial.BLL
@page "/Articulo"
@page "/Articulo/{ArticuloId:int}"


<EditForm Model="articulo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro Articulos</h3>
        </div>

        <div class="card-body">
            <form>

                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Articulos Id </label>
                            <div class="input-group">
                                <InputNumber @bind-Value="this.ArticuloId" class="form-control col-3" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-secondary input-group-text" style="z-index:0" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <label>Descripcion</label>
                    <InputText @bind-Value="articulo.Descripcion" class="form-control col-4" />
                    <ValidationMessage For="(() => articulo.Descripcion)" />
                </div>


                <div class="form-group">
                    <label>Existencia</label>
                    <InputNumber @bind-Value="articulo.Existencia" class="form-control" @onfocus="Calcular" @onfocusout="Calcular" @oninput="Calcular" />
                    <ValidationMessage For="(() => articulo.Existencia)" />
                </div>


                <div class="form-group">
                    <label>Costo</label>
                    <InputNumber @bind-Value="articulo.Costo" class="form-control" @onfocus="Calcular" @onfocusout="Calcular" @oninput="Calcular" />
                    <ValidationMessage For="(() => articulo.Costo)" />
                </div>


                <div class="form-group">
                    <label>Valor Inventario</label>
                    <InputNumber @bind-Value="articulo.ValorInventario" class="form-control" readonly />
                    <ValidationMessage For="(() => articulo.ValorInventario)" />
                </div>

            </form>
        </div>

        <h3>@Mensaje</h3>

        <div class="card-footer">
            <div class="form-group text-center">
                <button type="button" class="btn btn-primary" @onclick="Nuevo" style="margin: 5px">Nuevo</button>
                <button type="submit" class="btn btn-success" style="margin: 5px">Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar" style="margin: 5px">Eliminar</button>
            </div>
        </div>

    </div>
</EditForm>


@code {

    string Mensaje = string.Empty;

    [Inject]
    private ArticulosBLL articuloBLL { get; set; }

    [Parameter]
    public int ArticuloId { get; set; }

    Articulos articulo = new Articulos();

    protected override void OnInitialized()
    {
        Nuevo();
    }


    public async void Buscar()
    {
        var registro = await articuloBLL.Buscar(this.ArticuloId);

        if (registro != null)
        {
            articulo = registro;

        }
        else
        {
            Mensaje = "Encontrado";
        }
    }

    public void Nuevo()
    {
        Limpiar();
    }

    public async void Guardar()
    {
        articulo.ArticuloId = this.ArticuloId;
        if (await articuloBLL.Guardar(articulo))
        {

            Mensaje = (" Save");
            Limpiar();

        }
        else
        {
            Mensaje = ("No Save");

        }
    }

    public async void Eliminar()
    {
        if (await articuloBLL.Eliminar(this.ArticuloId))
        {
            Mensaje = ("Borrado");
            Limpiar();
        }
        else
        {
            Mensaje = ("No Borrado");

        }
    }

    public void Limpiar()
    {
        articulo = new Articulos();
        this.ArticuloId = 0;
    }

    private void Calcular()
    {
        articulo.ValorInventario = articulo.Costo * articulo.Existencia;
    }

}
